GameJS={init:function(e){"object"!=typeof e&&(console.error("Oh no! Your game JSON appears to be the wrong type. It must be the type 'object', you used "+JSON.stringify(e)+"."),console.error("Game.js hit a critical error, look at the error above for more information."));var t,i=!1;null==document.getElementById(e.htmlElementID)&&null!=e.htmlElementID&&(console.error("Oops, you specified the element to add the game canvas to but it doesn't seem to exist. \nThis is specified in 'GameJSON.htmlElementID' and is set to "+JSON.stringify(e.htmlElementID)+". You might want to check that the HTML that creates the element is before your JavaScript."),console.error("Game.js hit a critical error, look at the error above for more information."),i=!0),(t=GameJS.internal.checkOb(e,{ID:{types:["string"],description:"An ID for the game canvas so it can be referenced later in the program."},width:{types:["number"],description:"The virtual width for the game. Independent from the rendered width."},height:{types:["number"],description:"The virtual height for the game. Independent from the rendered height."},game:{types:["object"],description:"The JSON for the game."}},{htmlElementID:{default:null,types:["string"],description:"The element to append the game canvas to."},config:{default:{state:{default:"game",types:null,description:"The element to append the game canvas to."},display:{default:{fillScreen:!1},types:"object",description:"The element to append the game canvas to."}},types:["object"],description:"The game configuration settings."}},"GameJSON")).config=GameJS.internal.checkOb(t.config,{},{state:{default:"game",types:null,description:"The element to append the game canvas to."},display:{default:{fillScreen:!1},types:"object",description:"The element to append the game canvas to."}},"GameJSON.config"),t.config.display=GameJS.internal.checkOb(t.config.display,{},{fillScreen:{default:!1,types:["boolean"],description:"Determines if the game will be upscaled to fit the screen."}},"GameJSON.config"),t.game=GameJS.internal.checkOb(t.game,{},{assets:{default:{imgs:[],snds:[]},types:["object"],description:"The object that contains all the assets to be loaded for the game."},sprites:{default:[],types:["array"],description:"The array that contains the all the sprites' JSON."},scripts:{default:{preload:null,init:[],main:[]},types:["object"],description:"The object that contains all the game scripts that aren't for a particular sprite."}},"GameJSON.game"),t.game.assets=GameJS.internal.checkOb(t.game.assets,{imgs:{types:["array"],description:"The array that contains all the images to be loaded for the game."},snds:{types:["array"],description:"The array that contains all the images to be loaded for the game."}},{},"GameJSON.game.assets"),t.game.scripts=GameJS.internal.checkOb(t.game.scripts,{},{preload:{default:[],types:["function","undefined"],description:"A function to be run before the game loads."},init:{default:[],types:["array"],description:"The array that contains the init scripts. An init script will be run when the game state changes to (one of the states/the state) assigned to that script."},main:{default:[],types:["array"],description:"The array that contains the main scripts. A main script will be run 60 times a second while the game state matches (one of the states/the state) assigned to that script."}},"GameJSON.game.scripts"),t.state=t.config.state,t.loaded=!1,GameJS.internal.games.hasOwnProperty(t.ID)&&(console.error("Oh no! You used an ID for your game that is already being used. Try and think of something else. \nYou used "+JSON.stringify(t.ID)+" in 'GameJSON.htmlElementID'."),console.error("Game.js hit a critical error, look at the error above for more information."),i=!0),null==t.vars&&(t.vars={}),t.internal={renderer:{type:"canvas",width:t.width,height:t.height,lastRender:new Date},ids:[],idIndex:{},FPSFrames:0,loadedDelay:0},t.currentFPS=60,t.currentRenderFPS=60,(t=t).internal.renderer.canvas=document.createElement("canvas"),t.config.display.fillScreen?t.internal.renderer.canvas.style="display: block; touch-action: none; user-select: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); position: absolute; top:0; bottom: 0; left: 0; right: 0; margin: auto;":t.internal.renderer.canvas.style="display: block; touch-action: none; user-select: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);",t.internal.renderer.ctx=t.internal.renderer.canvas.getContext("2d"),t.internal.renderer.canvas.width=t.width,t.internal.renderer.canvas.height=t.height,null==t.htmlElementID?document.appendChild(t.internal.renderer.canvas):document.getElementById(t.htmlElementID).appendChild(t.internal.renderer.canvas),t.internal.renderer.ctx.imageSmoothingEnabled=!1,t.internal.scripts={index:{init:{},main:{},spritesInit:{},spritesMain:{}}},t.internal.assets={loading:0,loaded:0,imgs:{},snds:{}};var n=0;for(n in t.game.assets.imgs){"object"!=GameJS.internal.getTypeOf(t.game.assets.imgs[n])&&(console.error("Oh no! You need to use the type 'object' to define an asset. \nYou used type "+JSON.stringify(GameJS.internal.getTypeOf(t.game.assets.imgs[n]))+" in ''GameJSON.game.assets.imgs' item '"+n+"'."),console.error("Game.js hit a critical error, look at the error above for more information."),i=!0),t.game.assets.imgs[n]=GameJS.internal.checkOb(t.game.assets.imgs[n],{src:{types:["string"],description:"The src for the asset."},id:{types:["string"],description:"The id to target this asset by."}},{},"GameJSON.game.assets.imgs item "+n+"."),t.internal.assets.imgs.hasOwnProperty(t.game.assets.imgs[n].id)&&(console.error("Oh no! You used an ID for an asset that is already being used. Try and think of something else. \nYou used "+JSON.stringify(t.game.assets.imgs[n].id)+" in 'GameJSON.game.assets.imgs item "+n+"'."),console.error("Game.js hit a critical error, look at the error above for more information."),i=!0);var r=new Image;r.onload=function(){t.internal.assets.loading--,t.internal.assets.loaded++},r.onerror=function(){console.warn("Unable to load asset(s) using "+JSON.stringify(this.src)+" as the src. This may be due to it being a online asset and your computer being offline or because the asset doesn't exist. \nGame.js will continue to retry."),this.onerror=function(){setTimeout(function(e){var t=e.src;e.src="",e.src=t},1e4,this)},this.onerror()},r.src=t.game.assets.imgs[n].src,t.internal.assets.loading++,t.internal.assets.imgs[t.game.assets.imgs[n].id]={img:r}}n=0;for(n in t.game.scripts.init)"object"!=GameJS.internal.getTypeOf(t.game.scripts.init[n])&&(console.error("Oh no! You need to use the type 'object' to define a script. \nYou used type "+JSON.stringify(GameJS.internal.getTypeOf(t.game.scripts.init[n]))+" in ''GameJSON.game.scripts.init' item "+n+"."),console.error("Game.js hit a critical error, look at the error above for more information."),i=!0),t.game.scripts.init[n]=GameJS.internal.checkOb(t.game.scripts.init[n],{stateToRun:{types:["string","object"],description:"The state(s) when this script will be run."},code:{types:["function"],description:"The code to be run when the 'stateToRun' property matches the game state."}},{},"GameJSON.game.scripts.init item "+n+"."),null==t.internal.scripts.index.init[t.game.scripts.init[n].stateToRun]&&(t.internal.scripts.index.init[t.game.scripts.init[n].stateToRun]=[]),t.internal.scripts.index.init[t.game.scripts.init[n].stateToRun][t.internal.scripts.index.init[t.game.scripts.init[n].stateToRun].length]=n;n=0;for(n in t.game.scripts.main)"object"!=GameJS.internal.getTypeOf(t.game.scripts.main[n])&&(console.error("Oh no! You need to use the type 'object' to define a script. \nYou used type "+JSON.stringify(GameJS.internal.getTypeOf(t.game.scripts.main[n]))+" in ''GameJSON.game.scripts.main' item "+n+"."),console.error("Game.js hit a critical error, look at the error above for more information."),i=!0),t.game.scripts.main[n]=GameJS.internal.checkOb(t.game.scripts.main[n],{stateToRun:{types:["string","object"],description:"The state(s) when this script will be run."},code:{types:["function"],description:"The code to be run while the 'stateToRun' property matches the game state."}},{},"GameJSON.game.scripts.main item "+n+"."),null==t.internal.scripts.index.main[t.game.scripts.main[n].stateToRun]&&(t.internal.scripts.index.main[t.game.scripts.main[n].stateToRun]=[]),t.internal.scripts.index.main[t.game.scripts.main[n].stateToRun][t.internal.scripts.index.main[t.game.scripts.main[n].stateToRun].length]=n;n=0;for(n in t.game.sprites)GameJS.internal.createSprite({isClone:!1,i:n,game:t},t.game.sprites[n]);return i||"function"==t.game.scripts.preload&&t.game.scripts.preload(t),GameJS.internal.games[t.ID]=t,t},internal:{current:{sprite:null,game:null},findCloneID:function(e,t){var i=0;for(i in e.internal.cloneIDs)if(null==e.internal.cloneIDs[i])return i;return e.internal.cloneIDs.length},findSpriteID:function(e){var t=0;for(t in e.game.sprites)if(null==e.game.sprites[t])return t;return e.game.sprites.length},checkClones:function(e,t){var i=GameJS.internal.checkOb(e.clones,{},{x:{default:e.x,types:["number"],description:"The x position for the sprite to start at."},y:{default:e.y,types:["number"],description:"The y position for the sprite to start at."},img:{default:e.img,types:["string"],description:"The image for the sprite to use to start with."},clones:{default:{},types:["object"],description:"The default data for a clone of this clone. \nAll arguments are optional as the child clone will adopt the arguments from the clone function and the parent clone (in that priority)"},width:{default:e.width,types:["number"],description:"The width for the sprite."},height:{default:e.height,types:["number"],description:"The height for the sprite."},scale:{default:1,types:["number"],description:"The scale for the sprite."},scripts:{default:{init:[],main:[]},types:["object"],description:"The sprite's scripts."}},"function cloneSprite cloning the sprite "+JSON.stringify(t.spriteToClone)+".");i.scripts=GameJS.internal.checkOb(i.scripts,{},{init:{default:[],types:["array"],description:"The array of init functions for the clone."},main:{default:[],types:["array"],description:"The array of main functions for the sprite."}},"function cloneSprite cloning the sprite "+JSON.stringify(t.spriteToClone)+".");var n=0;for(n in i.scripts.init)"function"!=GameJS.internal.getTypeOf(i.scripts.init[n])&&(console.error("Oh no! You need to use the type 'function' in a clone's array of init scripts. \nYou used type "+JSON.stringify(GameJS.internal.getTypeOf(i.scripts.init[n]))+" while cloning the sprite "+t.spriteToClone+".  The value is..."),console.log(i.scripts.init[n]),console.error("Game.js hit a critical error, look at the error above for more information."));n=0;for(n in i.scripts.main)"function"!=GameJS.internal.getTypeOf(i.scripts.main[n])&&(console.error("Oh no! You need to use the type 'function' in a clone's array of main scripts. \nYou used type "+JSON.stringify(GameJS.internal.getTypeOf(i.scripts.main[n]))+" while cloning the sprite "+t.spriteToClone+".  The value is..."),console.log(i.scripts.main[n]),console.error("Game.js hit a critical error, look at the error above for more information."))},createSprite:function(e,t,i){if(e.isClone){GameJS.internal.checkClones(t,e);var n=t,r=0;for(r in n.scripts.init)null==i.internal.scripts.index.spritesInit[i.state]&&(i.internal.scripts.index.spritesInit[i.state]=[]),i.internal.scripts.index.spritesInit[i.state][i.internal.scripts.index.spritesInit[i.state].length]={script:r,sprite:n,isClone:!0};r=0;for(r in n.scripts.main)console.log(n.scripts.main[r]),null==i.internal.scripts.index.spritesMain[i.state]&&(i.internal.scripts.index.spritesMain[i.state]=[]),i.internal.scripts.index.spritesMain[i.state][i.internal.scripts.index.spritesMain[i.state].length]={script:r,sprite:n,isClone:!0};n.cloneOf=e.cloneOf,n.internal={cloneCount:0,cloneIDs:[]}}else{(n=GameJS.internal.checkOb(t,{x:{types:["number"],description:"The x position for the sprite to start at."},y:{types:["number"],description:"The y position for the sprite to start at."},img:{types:["string"],description:"The image for the sprite to use to start with."},id:{types:["string"],description:"The id for the sprite to be targeted by."}},{width:{default:"auto",types:["number"],description:"The width for the sprite."},height:{default:"auto",types:["number"],description:"The height for the sprite."},scale:{default:1,types:["number"],description:"The scale for the sprite."},scripts:{default:{init:[],main:[]},types:["object"],description:"The sprite's scripts."},clones:{default:{},types:["object"],description:"The default data for a clone of this sprite. \nAll arguments are optional as the clone will adopt the arguments from the clone function and the parent sprite (in that priority)"}},"GameJSON.game.sprites item "+e.i+".")).scripts=GameJS.internal.checkOb(n.scripts,{},{init:{default:[],types:["array"],description:"The array of init scripts for the sprite."},main:{default:[],types:["array"],description:"The array of main scripts for the sprite."}},"GameJSON.game.sprites item "+e.i+". -> scripts."),n.cloneOf=null,n.internal={cloneCount:0,cloneIDs:[]},e.game.internal.ids.includes(n.id)&&(console.error("Oh no! You used an ID for a sprite that is already being used. Try and think of something else. \nYou used "+JSON.stringify(n.id)+" in 'GameJSON.game.sprites item' "+e.i+"."),console.error("Game.js hit a critical error, look at the error above for more information.")),e.game.internal.ids[e.game.internal.ids.length]=n.id,e.game.internal.idIndex[n.id]=e.game.internal.ids.length-1;r=0;for(r in e.game.game.sprites[e.i].scripts.init)"object"!=GameJS.internal.getTypeOf(e.game.game.sprites[e.i].scripts.init[r])&&(console.error("Oh no! You need to use the type 'object' to define a script. \nYou used type "+JSON.stringify(GameJS.internal.getTypeOf(e.game.game.sprites[e.i].scripts.init[r]))+" in ''GameJSON.data.game.game.sprites' item "+r+" -> scripts.init."),console.error("data.game.js hit a critical error, look at the error above for more information.")),e.game.game.sprites[e.i].scripts.init[r]=GameJS.internal.checkOb(e.game.game.sprites[e.i].scripts.init[r],{stateToRun:{types:["string","object"],description:"The state(s) when this script will be run."},code:{types:["function"],description:"The code to be run when the 'stateToRun' property matches the game state."}},{},"GameJSON.data.game.scripts.init item "+r+"."),null==e.game.internal.scripts.index.spritesInit[e.game.game.sprites[e.i].scripts.init[r].stateToRun]&&(e.game.internal.scripts.index.spritesInit[e.game.game.sprites[e.i].scripts.init[r].stateToRun]=[]),e.game.internal.scripts.index.spritesInit[e.game.game.sprites[e.i].scripts.init[r].stateToRun][e.game.internal.scripts.index.spritesInit[e.game.game.sprites[e.i].scripts.init[r].stateToRun].length]={script:r,sprite:e.game.game.sprites[e.i]};r=0;for(r in e.game.game.sprites[e.i].scripts.main)"object"!=GameJS.internal.getTypeOf(e.game.game.sprites[e.i].scripts.main[r])&&(console.error("Oh no! You need to use the type 'object' to define a script. \nYou used type "+JSON.stringify(GameJS.internal.getTypeOf(e.game.game.sprites[e.i].scripts.main[r]))+" in ''GameJSON.data.game.game.sprites' item "+r+" -> scripts.main."),console.error("data.game.js hit a critical error, look at the error above for more information.")),e.game.game.sprites[e.i].scripts.main[r]=GameJS.internal.checkOb(e.game.game.sprites[e.i].scripts.main[r],{stateToRun:{types:["string","object"],description:"The state(s) when this script will be run."},code:{types:["function"],description:"The code to be run while the 'stateToRun' property matches the game state."}},{},"GameJSON.data.game.game.sprites item "+r+" -> scripts.main."),null==e.game.internal.scripts.index.spritesMain[e.game.game.sprites[e.i].scripts.main[r].stateToRun]&&(e.game.internal.scripts.index.spritesMain[e.game.game.sprites[e.i].scripts.main[r].stateToRun]=[]),e.game.internal.scripts.index.spritesMain[e.game.game.sprites[e.i].scripts.main[r].stateToRun][e.game.internal.scripts.index.spritesMain[e.game.game.sprites[e.i].scripts.main[r].stateToRun].length]={script:r,sprite:e.game.game.sprites[e.i]}}return n},getTypeOf:function(e){return Array.isArray(e)?"array":null==e?"undefined":typeof e},checkOb:function(e,t,i,n){var r=[],a=[],s=0;for(s in t)null==e[s]?r[r.length]=s:e.hasOwnProperty(s)&&null!=t[s].types&&(t[s].types.includes(GameJS.internal.getTypeOf(e[s]))||(a[a.length]=s));s=0;for(s in i)e.hasOwnProperty(s)&&null!=i[s].types&&(i[s].types.includes(GameJS.internal.getTypeOf(e[s]))||(a[a.length]=s));var o=e;s=0;for(s in i)null==e[s]&&(o[s]=i[s].default);var l=[];s=0;for(s in e)t.hasOwnProperty(s)||i.hasOwnProperty(s)||(l[l.length]=s);if(r.length>0){var m=[];1==r.length?m[m.length]="Oops, looks like you missed this out from "+JSON.stringify(n)+": \n \n":m[m.length]="Oops, looks like you missed these out from "+JSON.stringify(n)+": \n \n";s=0;for(s in r)m[m.length]=" "+r[s]+" -> "+t[r[s]].description+" \n";console.error(m.join(""))}if(a.length>0){m=[];1==a.length?m[m.length]="Oops, looks like you've put an incorrect input type in "+JSON.stringify(n)+": \n \n":m[m.length]="Oops, looks like you've put some incorrect input types in "+JSON.stringify(n)+": \n \n";s=0;for(s in a){var c=a[s];if(t.hasOwnProperty(c))if(1==t[c].types.length)m[m.length]=" "+c+" -> "+t[c].description+" \n You used the type "+JSON.stringify(GameJS.internal.getTypeOf(e[c]))+", it can only be "+JSON.stringify(t[c].types[0])+". \n";else{m[m.length]=" "+c+" -> "+t[c].description+" \n You used the type "+JSON.stringify(GameJS.internal.getTypeOf(e[c]))+", it has to be one of these types: \n";var p=0;for(p in t[c].types)m[m.length]="  "+JSON.stringify(t[c].types[p])+" \n"}else if(1==i[c].types.length)m[m.length]=" "+c+" -> "+i[c].description+" \n You used the type "+JSON.stringify(GameJS.internal.getTypeOf(e[c]))+", it can only be type "+JSON.stringify(i[c].types[0])+". \n";else{m[m.length]=" "+c+" -> "+i[c].description+" \n You used the type "+JSON.stringify(GameJS.internal.getTypeOf(e[c]))+", it has to be one of these types: \n";p=0;for(p in i[c].types)m[m.length]="  "+JSON.stringify(i[c].types[p])+" \n"}}console.error(m.join(""))}if(GameJS.config.flags.warnOfUselessParameters&&l.length>0){m=[];1==l.length?m[m.length]="You might want to remove this: \n":m[m.length]="You might want to remove these: \n \n";s=0;for(s in l)m[m.length]=l[s]+" \n";m[m.length]="Or you may have made a typo and it could be one of these... \n \n";s=0;for(s in i)m[m.length]=" "+s+" -> "+i[s].description+" \n";m[m.length]="Alternatively, you can disable these warnings by editing the 'warnOfUselessParameters' flag. \nUse this code: 'GameJS.config.flags.warnOfUselessParameters = false'",console.warn(m.join(""))}return(r.length>0||a.length>0)&&console.error("Game.js hit a critical error, look at the error above for more information."),o},requestAnimationFrame:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame,tick:function(){var e=0;for(e in GameJS.internal.games){var t=new Date,i=GameJS.internal.games[e].internal.renderer.ctx,n=GameJS.internal.games[e].internal.renderer.canvas,r=GameJS.internal.games[e],a=window.innerWidth,s=window.innerHeight,o=r.width/r.height;if(a>s*o)a=s*o;else s=a/o;if(r.config.display.fillScreen&&(r.internal.lastWidth==a&&r.internal.lastHeight==s||(r.internal.lastWidth=a*window.devicePixelRatio,r.internal.lastHeight=s*window.devicePixelRatio,r.internal.renderer.canvas.width=a*window.devicePixelRatio,r.internal.renderer.canvas.height=s*window.devicePixelRatio,r.internal.renderer.canvas.style.width=a,r.internal.renderer.canvas.style.height=s,r.internal.renderer.ctx.imageSmoothingEnabled=!1)),GameJS.internal.games[e].loaded)GameJS.internal.current.game=GameJS.internal.games[e],GameJS.internal.scripts(GameJS.internal.games[e]),GameJS.internal.render.renderFrame[GameJS.internal.games[e].internal.renderer.type](GameJS.internal.games[e],GameJS.internal.games[e].internal.renderer.canvas,GameJS.internal.games[e].internal.renderer.ctx,GameJS.internal.games[e].internal.renderer);else{i.fillStyle="black",i.fillRect(0,0,n.width,n.height);var l=r.internal.assets.loaded/(r.internal.assets.loaded+r.internal.assets.loading)*100;i.fillStyle="lime";var m=l/100*n.height;i.fillRect(0,n.height-m,n.width,m),i.font=50*window.devicePixelRatio+"px Arial",i.textAlign="center",i.textBaseline="middle";var c=i.measureText("Loading...").width;m=50*window.devicePixelRatio;if(i.fillStyle="black",i.fillRect(n.width/2-c/2-10*window.devicePixelRatio,n.height/2-m/2-5*window.devicePixelRatio,c+10*window.devicePixelRatio,m+10*window.devicePixelRatio),i.fillStyle="lime",i.fillText("Loading...",n.width/2,n.height/2),0==GameJS.internal.games[e].internal.assets.loading&&(GameJS.internal.games[e].internal.loadedDelay++,GameJS.internal.games[e].internal.loadedDelay>100)){GameJS.internal.games[e].loaded=!0;var p=0;for(p in GameJS.internal.games[e].game.sprites){var h=GameJS.internal.games[e].game.sprites[p],g=!0;"auto"==h.width&&(h.width=GameJS.internal.games[e].internal.assets.imgs[h.img].img.width,g=!1),"auto"==h.height&&(h.height=GameJS.internal.games[e].internal.assets.imgs[h.img].img.height,g=!1),g||(h.width=GameJS.internal.games[e].internal.assets.imgs[h.img].img.width*h.scale,h.height=GameJS.internal.games[e].internal.assets.imgs[h.img].img.height*h.scale)}}}GameJS.internal.games[e].internal.FPSFrames++,GameJS.internal.games[e].currentRenderFPS=1e3/(new Date-t),GameJS.internal.games[e].internal.renderer.lastRender=new Date}GameJS.internal.requestAnimationFrame.call(window,GameJS.internal.tick)},scripts:function(e){if(GameJS.internal.current.game=e,e.internal.lastState!=e.state){GameJS.internal.current.sprite=null;var t=0;for(t in e.internal.scripts.index.init[e.state]){e.game.scripts.init[e.internal.scripts.index.init[e.state][t]].code(e)}t=0;for(t in e.internal.scripts.index.spritesInit[e.state]){var i=e.internal.scripts.index.spritesInit[e.state][t].sprite;GameJS.internal.current.sprite=e.game.sprites[e.internal.ids.indexOf(i.id)],i.scripts.init[e.internal.scripts.index.spritesInit[e.state][t].script].code(e,i)}e.internal.lastState=e.state}GameJS.internal.current.sprite=null;t=0;for(t in e.internal.scripts.index.main[e.state]){e.game.scripts.main[e.internal.scripts.index.main[e.state][t]].code(e)}t=0;for(t in e.internal.scripts.index.spritesMain[e.state]){i=e.internal.scripts.index.spritesMain[e.state][t].sprite;if(GameJS.internal.current.sprite=e.game.sprites[e.internal.ids.indexOf(i.id)],e.internal.scripts.index.spritesMain[e.state][t].isClone)i.scripts.main[e.internal.scripts.index.spritesMain[e.state][t].script](e,i);else i.scripts.main[e.internal.scripts.index.spritesMain[e.state][t].script].code(e,i)}GameJS.internal.current.sprite=null,GameJS.internal.current.game=null},render:{vars:{canvas:{gameCache:{}}},scale:{x:function(e,t,i){return e/t.width*i.width},y:function(e,t,i){return e/t.height*i.height},width:function(e,t,i){return e/t.width*i.width},height:function(e,t,i){return e/t.height*i.height}},renderFrame:{canvas:function(e,t,i,n){var r=window.innerWidth,a=window.innerHeight,s=e.width/e.height;if(r>a*s)r=a*s;else a=r/s;e.config.display.fillScreen&&(e.internal.lastWidth==r&&e.internal.lastHeight==a||(e.internal.lastWidth=r,e.internal.lastHeight=a,e.internal.renderer.canvas.width=r,e.internal.renderer.canvas.height=a,e.internal.renderer.ctx.imageSmoothingEnabled=!1)),i.fillStyle="white",i.fillRect(0,0,t.width,t.height);var o=0;for(o in e.game.sprites){var l=e.game.sprites[o],m=l.x-l.width/2,c=l.y-l.height/2;i.drawImage(e.internal.assets.imgs[l.img].img,GameJS.internal.render.scale.x(m,n,t),GameJS.internal.render.scale.y(c,n,t),GameJS.internal.render.scale.width(l.width,n,t),GameJS.internal.render.scale.height(l.height,n,t))}}}},games:{},collision:{methods:{AABB:function(e,t){return e.x<=t.x+t.width&&e.x>=t.x&&e.y<=t.y+t.height&&e.y>=t.y}}}},methods:{cloneSprite:function(e,t){if(null==e)var i=GameJS.internal.current.sprite;else{null==GameJS.internal.current.game.internal.idIndex[e]&&console.error("Oops. You are trying to clone a sprite that doesn't exist. You tried to clone "+JSON.stringify(e)+".");i=GameJS.internal.current.game.game.sprites[GameJS.internal.current.game.internal.idIndex[e]]}if(null==t)var n={};else n=t;var r=GameJS.internal.findCloneID(i,GameJS.internal.current.game),a=GameJS.internal.findSpriteID(GameJS.internal.current.game);i.internal.cloneIDs[r]=a;var s=Object.assign({},i),o=0;for(o in i.clones)s[o]=i.clones[o];o=0;for(o in n)s[o]=n[o];var l=GameJS.internal.createSprite({isClone:!0,cloneOf:i.id},s,GameJS.internal.current.game);l.id=i.id+"#"+r,GameJS.internal.current.game.game.sprites[a]=l;o=0;for(o in l.scripts.init)l.scripts.init[o](GameJS.internal.current.game,l)},AABBTouching:function(e){null==GameJS.internal.current.game.game.sprites[e]&&console.error("Oops. You are trying to perform AABB collision detection against a sprite that doesn't exist. The sprite was "+JSON.stringify(e)+".");var t=GameJS.internal.current.game.game.sprites[e];if(GameJS.internal.collision.methods.AABB({x:me.x-me.width/2,y:me.y-me.height/2,width:me.width,height:me.height},{x:t.x-t.width/2,y:t.y-t.height/2,width:t.width,height:t.height}))return!0;var i=0;for(i in t.internal.cloneIDs){if(null==t.internal.cloneIDs[i])break;var n=GameJS.internal.current.game.game.sprites[e+"#"+t.internal.cloneIDs[i]];if(GameJS.internal.collision.methods.AABB({x:me.x-me.width/2,y:me.y-me.height/2,width:me.width,height:me.height},{x:n.x-n.width/2,y:n.y-n.height/2,width:n.width,height:n.height}))return!0}return!1}},config:{flags:{warnOfUselessParameters:!0}}},GameJS.internal.requestAnimationFrame.call(window,GameJS.internal.tick),setInterval(function(){var e=0;for(e in GameJS.internal.games)GameJS.internal.games[e].currentFPS=Math.min(GameJS.internal.games[e].internal.FPSFrames,60),GameJS.internal.games[e].internal.FPSFrames=0},1e3);
